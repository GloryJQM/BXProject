//
//  StandardView.m
//  SmallCEO
//
//  Created by 任成龙 on 2017/7/10.
//  Copyright © 2017年 lemuji. All rights reserved.
//

#import "StandardView.h"
#import "StandardButton.h"
#import "LoginViewController.h"
@interface StandardView()<UITextFieldDelegate>{
    UIView *TfBackView;
    UILabel *warningLabel;
    NSString *goods_price;
    
    UIButton *_minus;
    
    UIScrollView *standardScrollView;
    
    NSString *reminderStr;
}
@property (nonatomic, strong) UIScrollView *backView;
@property (nonatomic, strong) NSDictionary *dataDic;
@property (nonatomic, strong) UIImageView *imageView;
@property (nonatomic, strong) UILabel *price;
@property (nonatomic, strong) UILabel *inventory;
@property (nonatomic, strong) UILabel *hint;
@property (nonatomic, strong) UILabel *reminder;
@property (nonatomic, strong) UITextField *numbersTf;
@property (nonatomic, copy) NSString *titleStr;

@property (nonatomic, strong) NSMutableArray *guigeArray;
@property (nonatomic, strong) NSMutableDictionary *productDic;
@property (nonatomic, strong) NSMutableArray *productAry;

@property (nonatomic, assign) NSInteger is_point_type;

@property (nonatomic, copy) NSString *goods_id;

@end
@implementation StandardView

- (instancetype)initWithDic:(NSDictionary *)dataDic title:(NSString *)titleStr goods_id:(NSString *)goods_id {
    self = [super initWithFrame:CGRectMake(0, 0, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT)];
    if (self) {
        self.is_point_type = [dataDic[@"is_point_type"] integerValue];
        self.dataDic = dataDic;
        self.titleStr = titleStr;
        self.guigeArray = [NSMutableArray array];
        self.productDic = [NSMutableDictionary dictionary];
        self.productAry = [NSMutableArray array];
        self.goods_id = goods_id;
        [self creationArray];
        [self creationView];
    }
    return self;
}

- (void)creationView {
    
    UIButton *button = [[UIButton alloc] initWithFrame:[UIScreen mainScreen].bounds];
    button.backgroundColor = [UIColor blackColor];
    button.alpha = 0.7;
    [button addTarget:self action:@selector(removeView) forControlEvents:UIControlEventTouchUpInside];
    [self addSubview:button];
    
    self.backView = [[UIScrollView alloc] init];
    _backView.backgroundColor = [UIColor whiteColor];
    [self addSubview:_backView];
    
    
    self.imageView = [[UIImageView alloc] initWithFrame:CGRectMake(15, 20, 100, 100)];
    [_imageView sd_setImageWithURL:[NSURL URLWithString:self.dataDic[@"pro_picurl"]]];
    [_backView addSubview:_imageView];
    
    UIButton *remove = [UIButton buttonWithType:UIButtonTypeCustom];
    remove.frame = CGRectMake(UI_SCREEN_WIDTH - 55, _imageView.minY, 40, 40);
    [remove setImage:[UIImage imageNamed:@"button-guanbi@2x"] forState:UIControlStateNormal];
    [remove addTarget:self action:@selector(removeView) forControlEvents:UIControlEventTouchUpInside];
    [_backView addSubview:remove];
    
    self.price = [[UILabel alloc] initWithFrame:CGRectMake(_imageView.maxX + 10, _imageView.minY, 200, 20)];
    NSString *gonghuo_price = [NSString stringWithFormat:@"%@", self.dataDic[@"gonghuo_price"]];
    _price.text = [gonghuo_price moneyPoint:[self.dataDic[@"is_point_type"] integerValue]];
    _price.textAlignment = NSTextAlignmentLeft;
    _price.font = [UIFont systemFontOfSize:16];
    _price.textColor = [UIColor colorFromHexCode:@"#A31F2C"];
    [_backView addSubview:_price];
    
    self.inventory = [[UILabel alloc] initWithFrame:CGRectMake(_imageView.maxX + 10, _price.maxY + 11, 200, 20)];
    _inventory.textAlignment = NSTextAlignmentLeft;
    _inventory.text = @"库存";
    _inventory.font = [UIFont systemFontOfSize:14];
    _inventory.textColor = Color0E0E0E;
    [_backView addSubview:_inventory];
    
    self.hint = [[UILabel alloc] initWithFrame:CGRectMake(_imageView.maxX + 10, _inventory.maxY + 11, UI_SCREEN_WIDTH - _imageView.maxX - 20, 20)];
    _hint.text = @"请选择颜色, 尺寸";
    _hint.textAlignment = NSTextAlignmentLeft;
    _hint.font = [UIFont systemFontOfSize:14];
    _hint.textColor = Color0E0E0E;
    [_backView addSubview:_hint];
    
    [_backView addLineWithY:_imageView.maxY + 16 X:15 width:UI_SCREEN_WIDTH - 30];
    
    
    standardScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, _imageView.maxY + 17, UI_SCREEN_HEIGHT, 100)];
    [_backView addSubview:standardScrollView];
    
    NSArray *guigeAry = self.dataDic[@"guige"];
    CGFloat viewY = 0;
    
    __block typeof(self) weakSlef = self;
    NSString *goods_id = [self getAttr_id];
    NSArray *goods_ary = [goods_id componentsSeparatedByString:@","];
    for (int i = 0; i < guigeAry.count; i++) {
        
        NSInteger index = goods_ary.count > i ? i : 0;
        NSString *goods_id = [NSString stringWithFormat:@"%@", goods_ary[index]];
        self.guigeArray[i] = [NSString stringWithFormat:@"%d", i];
        StandardButton *standardButton = [[StandardButton alloc] initWithY:viewY DictionAry:guigeAry[i] index:i + 80 block:^(NSString *idString, NSInteger index) {
            DLog(@"%@", idString);
            weakSlef.guigeArray[index - 80] = idString;
            [self buttonStatusColor];
            [weakSlef changeImagePrice];
        } goods_id:goods_id product_list:[self.productDic allKeys]];
        standardButton.tag = i + 80;
        [standardScrollView addSubview:standardButton];
        viewY = standardButton.maxY;
    }
    
    CGFloat he = UI_SCREEN_HEIGHT * 0.8;
    if (viewY + 270 > he) {
        standardScrollView.frame = CGRectMake(0, _imageView.maxY + 17, UI_SCREEN_HEIGHT, he - 270);
        standardScrollView.contentSize = CGSizeMake(UI_SCREEN_HEIGHT, viewY);
    }else {
        standardScrollView.frame = CGRectMake(0, _imageView.maxY + 17, UI_SCREEN_HEIGHT, viewY);
        standardScrollView.contentSize = CGSizeMake(UI_SCREEN_HEIGHT, viewY);
    }
    
    
    [self buttonStatusColor];
    
    UILabel *amount = [[UILabel alloc] initWithFrame:CGRectMake(16, standardScrollView.maxY + 25, 60, 20)];
    amount.text = @"数量";
    amount.textAlignment = NSTextAlignmentLeft;
    amount.font = [UIFont systemFontOfSize:15];
    amount.textColor = Color161616;
    [_backView addSubview:amount];
    
    UIView * tempNumView = [[UIView alloc] initWithFrame:CGRectMake(amount.maxX + 16, standardScrollView.maxY + 16, 140, 40)];
    tempNumView.layer.borderWidth = 1;
    tempNumView.layer.borderColor = [UIColor colorFromHexCode:@"#E4E4E4"].CGColor;
    tempNumView.layer.cornerRadius = 2;
    [_backView addSubview:tempNumView];
    
    for(int i = 0;i<2;i++) {
        UIButton* btn = [[UIButton alloc]initWithFrame:CGRectMake(100*i, 0, 40, 40)];
        btn.tag = i;
        [btn setBackgroundColor:WHITE_COLOR];
        [btn addTarget:self action:@selector(choseNum:) forControlEvents:UIControlEventTouchUpInside];
        
        UILabel *line = [[UILabel alloc] init];
        line .backgroundColor = [UIColor colorFromHexCode:@"#E9E9E9"];
        [btn addSubview:line];
        if(i==0) {
            line.frame = CGRectMake(39.5, 0, 0.5, 40);
            [btn setImage:[UIImage imageNamed:@"csl_minus.png"] forState:UIControlStateNormal];
            _minus = btn;
        }else if(i==1) {
            [btn setImage:[UIImage imageNamed:@"csl_plus.png"] forState:UIControlStateNormal];
            line.frame = CGRectMake(0, 0, 0.5, 40);
        }
        [tempNumView addSubview:btn];
    }
    
    UITextField* numTf = [[UITextField alloc]initWithFrame:CGRectMake(40, 0, 60, 40)];
    numTf.keyboardType = UIKeyboardTypeNumberPad;
    numTf.delegate = self;
    numTf.backgroundColor = WHITE_COLOR;
    numTf.textAlignment = NSTextAlignmentCenter;
    numTf.text = @"1";
    numTf.font = [UIFont systemFontOfSize:13];
    self.numbersTf = numTf;
    [tempNumView addSubview:numTf];
    
    self.reminder = [[UILabel alloc] initWithFrame:CGRectMake(16, amount.maxY + 30, UI_SCREEN_WIDTH - 30, 20)];
    _reminder.textAlignment = NSTextAlignmentLeft;
    _reminder.font = [UIFont systemFontOfSize:14];
    _reminder.textColor = Color74828B;
    _reminder.text = reminderStr;
    [_backView addSubview:_reminder];
    
    
    UIButton *purchase = [[UIButton alloc] initWithFrame:CGRectMake(0, UI_SCREEN_HEIGHT - 55, UI_SCREEN_WIDTH, 55)];
    [purchase setTitle:self.titleStr forState:UIControlStateNormal];
    purchase.backgroundColor = App_Main_Color;
    purchase.titleLabel.font = [UIFont systemFontOfSize:16];
    [purchase addTarget:self action:@selector(purchaseButton:) forControlEvents:UIControlEventTouchUpInside];
    [self addSubview:purchase];
    
    _backView.frame = CGRectMake(0, UI_SCREEN_HEIGHT, UI_SCREEN_WIDTH, _reminder.maxY + 10);
    [UIView animateWithDuration:0.2 animations:^{
        _backView.frame = CGRectMake(0, UI_SCREEN_HEIGHT - _reminder.maxY - 10 - 55, UI_SCREEN_WIDTH, _reminder.maxY + 10);
    }];
}


- (void)removeView {
    [UIView animateWithDuration:0.2 animations:^{
        _backView.frame = CGRectMake(0, UI_SCREEN_HEIGHT, UI_SCREEN_WIDTH, _backView.height);
    } completion:^(BOOL finished) {
        [self removeFromSuperview];
    }];
}

//购买
- (void)purchaseButton:(UIButton *)sender {
    NSString *good_id = [self getShopid];
    if (![good_id isBlankString]) {
        NSString *message = nil;
        for (int i = 0; i < self.guigeArray.count; i++) {
            NSString *string = [NSString stringWithFormat:@"%@", self.guigeArray[i]];
            if ([string isEqualToString:@"0"]) {
                if ([message isBlankString]) {
                    message = [NSString stringWithFormat:@"%@ %@", message, self.dataDic[@"guige"][i][@"name"]];
                }else {
                    message = [NSString stringWithFormat:@"%@", self.dataDic[@"guige"][i][@"name"]];
                }
            }
        }
        [SVProgressHUD showErrorWithStatus:[NSString stringWithFormat:@"请选择 %@", message]];
        return;
    }
    
    if ([self.delegate respondsToSelector:@selector(standardTitleStr:goods_id:goods_num:attr_id:)]) {
        [self.delegate standardTitleStr:[sender currentTitle] goods_id:[self getShopid] goods_num:[self.numbersTf.text integerValue] attr_id:[self.guigeArray componentsJoinedByString:@","]];
    }
    [self removeFromSuperview];
    
    
}

- (void)choseNum:(UIButton *)btn {
    if(btn.tag == 0) {
        if([self.numbersTf.text integerValue] > 1) {
            self.numbersTf.text = [NSString stringWithFormat:@"%d",[self.numbersTf.text intValue]-1];
        }
    } else {
        self.numbersTf.text = [NSString stringWithFormat:@"%d",[self.numbersTf.text intValue]+1];
    }
    
    [self changeImagePrice];
}

- (void)buttonStatusColor {
    NSArray *guigeAry = self.dataDic[@"guige"];
    for (int i = 0; i < guigeAry.count; i++) {
        StandardButton *standardButton = [standardScrollView viewWithTag:i + 80];
        NSDictionary *dic = guigeAry[i];
        NSArray *array = dic[@"data"];
        for (int i = 0; i < array.count; i++) {
            UIButton *button = [standardButton viewWithTag:10 + i];
            [button setTitleColor:[UIColor colorFromHexCode:@"#2A3034"] forState:UIControlStateNormal];
            button.userInteractionEnabled = YES;
        }
    }
    
    for (int i = 0; i < self.guigeArray.count; i++) {
        NSString *idString = self.guigeArray[i];
        if (![idString isEqualToString:@"0"]) {
            NSArray *idsArray = [[NSString stringWithFormat:@"%@", self.productDic[idString]] componentsSeparatedByString:@"^"];
            
            NSArray *guigeAry = self.dataDic[@"guige"];
            for (int j = 0; j < guigeAry.count; j++) {
                if (i == j) {
                    continue;
                }
                StandardButton *standardButton = [standardScrollView viewWithTag:j + 80];
                NSDictionary *guigeDic = guigeAry[j];
                NSArray *array = guigeDic[@"data"];
                for (int k = 0; k < array.count; k++) {
                    UIButton *button = [standardButton viewWithTag:10 + k];
                    NSDictionary *dic = array[k];
                    NSString *idStr = [NSString stringWithFormat:@"%@", dic[@"id"]];
                    NSArray *att_idAry =[self.productDic[idStr] componentsSeparatedByString:@"^"];
                    if (![self attr_idAry:idsArray string:att_idAry]) {
                        [button setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
                        button.userInteractionEnabled = NO;
                    }else {
                        [button setTitleColor:[UIColor colorFromHexCode:@"#2A3034"] forState:UIControlStateNormal];
                        button.userInteractionEnabled = YES;
                    }
                }
            }
        }
    }
}

//改变图片和价格
- (void)changeImagePrice {
    NSString *string = [self.guigeArray componentsJoinedByString:@","];
    NSArray *product_list = self.dataDic[@"product_list"];
    for (int i = 0; i < product_list.count; i++) {
        NSDictionary *dic = product_list[i];
        NSString *attr_id = dic[@"attr_id"];
        if ([string isEqualToString:attr_id]) {
            NSInteger index = [self.numbersTf.text intValue] > 0 ? [self.numbersTf.text integerValue] : 1;
            
            goods_price = [NSString stringWithFormat:@"%f", [dic[@"gonghuo_price"] floatValue] * index];
            NSString *main_img_url = [NSString stringWithFormat:@"%@", dic[@"main_img_url"]];
            
            _price.text = [goods_price moneyPoint:[self.dataDic[@"is_point_type"] integerValue]];
            [_imageView sd_setImageWithURL:[NSURL URLWithString:main_img_url]];
            _hint.text = [NSString stringWithFormat:@"%@", dic[@"attr_sku"]];
            
            NSString *supplier_message = [NSString stringWithFormat:@"%@", dic[@"supplier_message"]];
            if ([supplier_message isBlankString]) {
                reminderStr = supplier_message;
                _reminder.text = supplier_message;
            }
            NSString *goods_number = [NSString stringWithFormat:@"%@", dic[@"goods_number"]];
            if ([goods_number isBlankString]) {
                self.inventory.text = [NSString stringWithFormat:@"库存%@", goods_number];
            }
        }else {
            
        }
    }
    [self minusColor];
}

- (void)creationArray {
    NSArray *product_list = self.dataDic[@"product_list"];
    for (int i = 0; i < product_list.count; i++) {
        NSDictionary *dic = product_list[i];
        NSString *attr_id = dic[@"attr_id"];
        if (![attr_id isBlankString]) {
            continue;
        }
        NSArray *attrAry = [attr_id componentsSeparatedByString:@","];
        for (int j = 0; j < attrAry.count; j++) {
            NSString *str = [NSString stringWithFormat:@"%@", attrAry[j]];
            NSString *string = self.productDic[str];
            if ([string isBlankString]) {
                string = [NSString stringWithFormat:@"%@^%@",string, attr_id];
            }else {
                string = attr_id;
            }
            [self.productDic setObject:string forKey:str];
        }
    }
    DLog(@"%@", self.productDic);
}

- (NSString *)getShopid {
    NSString *shopid;
    NSString *string = [self.guigeArray componentsJoinedByString:@","];
    NSArray *product_list = self.dataDic[@"product_list"];
    for (int i = 0; i < product_list.count; i++) {
        NSDictionary *dic = product_list[i];
        NSString *attr_id = dic[@"attr_id"];
        if ([attr_id isEqualToString:string]) {
            shopid = [NSString stringWithFormat:@"%@", dic[@"id"]];
        }
    }
    return shopid;
}

- (BOOL)attr_idAry:(NSArray *)array string:(NSArray *)string {
    BOOL isC = NO;
    for (int i = 0; i < array.count; i++) {
        for (int j = 0; j < string.count; j++) {
            if ([array[i] isBlankString] && [string[j] isBlankString]) {
                if ([array[i] isEqualToString:string[j]]) {
                    isC = YES;
                }
            }
        }
    }
    return isC;
}


- (NSString *)getAttr_id {
    NSString *attr_id;
    NSDictionary *dic;
    NSArray *product_list = self.dataDic[@"product_list"];
    NSMutableArray *muAry = [NSMutableArray array];
    muAry = [NSMutableArray arrayWithArray:product_list];
    
    for (NSDictionary *plDic in product_list) {
        NSString *attr_id = [NSString stringWithFormat:@"%@", plDic[@"attr_id"]];
        if (![attr_id isBlankString]) {
            [muAry removeObject:plDic];
        }
    }
    
    product_list = [NSArray arrayWithArray:muAry];
    
    if ([product_list isKindOfClass:[NSArray class]] && product_list != nil) {
        if ([self.goods_id isBlankString]) {
            for (int i = 0; i < product_list.count; i++) {
                NSString *ids = product_list[i][@"id"];
                if ([ids isEqualToString:self.goods_id]) {
                    dic = product_list[i];
                }
            }
        }else {
            dic = [product_list firstObject];
        }
    }
    attr_id = [NSString stringWithFormat:@"%@", dic[@"attr_id"]];
    return attr_id;
}

- (void)missKeyBoard {
    [self endEditing:YES];
}

- (void)textFieldDidBeginEditing:(UITextField *)textField {
    if (!TfBackView) {
        TfBackView = [[UIView alloc]init];
    }
    TfBackView.frame = CGRectMake(0, - UI_SCREEN_HEIGHT, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT);
    TfBackView.userInteractionEnabled = YES;
    [TfBackView addTarget:self action:@selector(missKeyBoard) forControlEvents:UIControlEventTouchUpInside];
    [self addSubview:TfBackView];
    
    if (!warningLabel) {
        warningLabel = [[UILabel alloc] init];
    }
    warningLabel.frame = CGRectMake(0, 0, UI_SCREEN_WIDTH, 30);
    warningLabel.font = [UIFont systemFontOfSize:14.0];
    warningLabel.textAlignment = NSTextAlignmentCenter;
    warningLabel.text = @"轻触灰色区域隐藏键盘";
    warningLabel.textColor = [UIColor whiteColor];
    warningLabel.backgroundColor = [UIColor lightGrayColor];
    textField.inputAccessoryView = warningLabel;
    
    TfBackView.frame = CGRectMake(0, 0, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT);
    self.frame = CGRectMake(0, -216 + 44, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT);
}
- (void)textFieldDidEndEditing:(UITextField *)textField {
    self.frame = CGRectMake(0, 0, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT);
    TfBackView.frame = CGRectMake(0, -UI_SCREEN_HEIGHT, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT);
    
    if (textField.text.length < 1 || textField.text.length > 3|| [textField.text isEqualToString:@"0"]) {
        
        self.numbersTf.text = @"1";
    }
    [self changeImagePrice];
}

- (void)setNumber:(NSInteger)number {
    self.numbersTf.text = [NSString stringWithFormat:@"%ld", (long)number];
    [self changeImagePrice];
    [self minusColor];
}

//减号颜色
- (void)minusColor {
    if ([self.numbersTf.text isEqualToString:@"1"]) {
        [_minus setImage:[UIImage imageNamed:@"csl_minus1@2x"] forState:UIControlStateNormal];
        _minus.userInteractionEnabled = NO;
    }else {
        [_minus setImage:[UIImage imageNamed:@"csl_minus"] forState:UIControlStateNormal];
        _minus.userInteractionEnabled = YES;
    }
}

@end
